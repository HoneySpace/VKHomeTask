{"version":3,"sources":["img/persik.png","urls.js","panels/Profile.js","components/HeaderDrop.js","panels/Subjects.js","panels/Tom.js","panels/Tasks.js","components/usersList.js","components/commentSection.js","modals/TaskInfo.js","views/Tasks.js","panels/Members.js","App.js","panels/Persik.js","index.js"],"names":["module","exports","url","Profile","id","fetchedUser","go","UserData","useEffect","title","before","photo_200","src","description","rep","first_name","last_name","HeaderDrop","Head","setActiveModal","modal","setDel","onDel","useState","contextOpened","setcontextOpened","Switch","style","padding","aside","transform","onClick","opened","onClose","e","preventDefault","console","log","Subjects","onSubjectClick","subjs","setSubjects","fetchData","a","fetch","r","json","resp","s","items","obj","JSON","stringify","del","currentTarget","dataset","s_id","separator","map","item","key","name","data-s_id","_id","expandable","Toms","onTomClick","toms","setToms","i","push","t_id","data-t_id","TasksList","onTaskClick","tasks","setTasks","Tasks","ts_id","Isdone","doneers","find","data-ts_id","UserList","users","UsersData","setUserData","ids","user","result","length","t","response","header","mode","photo_50","size","CommentSection","comments","comment","u","text","multiline","TaskInfo","activeModal","setts_id","fetchSubj","fetchToms","fetchTasks","setPopout","closeModal","closePopout","isHead","document","getElementById","value","data","bounty","about","deadline","task","setTask","dynamicContentHeight","right","color","discription","placeholder","marginBottom","top","type","activePanel","setActivePanel","popout","sets_id","sett_id","Tom","Members","setUsers","mem","members","String","vk_id","member","vk_in","vk_info","firstName","lastName","photo","membe","App","platform","activeStory","setActiveStory","setUser","bridge","send","finded","subscribe","detail","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","onStoryChange","story","tabbar","selected","data-story","ReactDOM","render"],"mappings":"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","file":"static/js/main.837105e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","const url = \"https://hscomhometask.herokuapp.com\";\r\nexport default url;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Profile = ({ id, go, fetchedUser,UserData }) => {\r\n    useEffect(()=>{\r\n    });\r\n    return(\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Профиль</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={UserData ? `Репутация: ${UserData.rep}` : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\t\t\r\n\t</Panel>);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner,PanelHeaderSimple, PanelHeaderContent,PanelHeaderContext, Header,Div, List} from '@vkontakte/vkui';\r\n\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\n\r\n\r\nconst HeaderDrop = ({Head,setActiveModal,modal,setDel,onDel}) => {\r\n    const [contextOpened,setcontextOpened] = useState(false);\r\n\r\n    const Switch= () =>\r\n    {\r\n        setcontextOpened(!contextOpened)\r\n    }\r\n\r\n    const onAddClick = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('Сейчас добавим');\r\n        Switch();        \r\n        setActiveModal(modal);\r\n    }\r\n    const onDelClick = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('Удаляем...'); \r\n        Switch();\r\n        setDel(!onDel);     \r\n    }\r\n\r\n    return(<Div style={{padding:0}}>\r\n        <PanelHeaderSimple ><PanelHeaderContent\r\n              aside={<Icon24Dropdown style={{ transform: `rotate(${contextOpened ? '180deg' : '0'})` }} />}\r\n              onClick={Switch}\r\n            >\r\n              {Head}\r\n            </PanelHeaderContent></PanelHeaderSimple >\r\n            <PanelHeaderContext opened={contextOpened} onClose={()=>{}}>\r\n            <List>\r\n              <Cell onClick={onAddClick}                                            \r\n              >\r\n                Добавить\r\n              </Cell>\r\n              <Cell  onClick={onDelClick}              \r\n              >\r\n                {onDel?\"Закончить удаление\":\"Удалить\"}\r\n              </Cell>\r\n            </List>\r\n          </PanelHeaderContext></Div>)\r\n};\r\n\r\nexport default HeaderDrop;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List,PanelHeaderContext,PanelHeaderContent} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport url from \"../urls\";\r\n\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nconst Subjects = ({ id,onSubjectClick,setActiveModal,subjs, setSubjects}) => {\r\n    const [onDel,setDel] = useState(false);\r\n    useEffect( ()=>\r\n    {     \r\n        fetchData();\r\n    },[subjs]);\r\n\r\n    async function fetchData()  \r\n        {\r\n            let r =await fetch(`${url}/get_subjects`);\r\n            let resp = await r.json();        \r\n            if(s(resp.items) !== s(subjs)) setSubjects(resp.items);\r\n        }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    async function del(e)\r\n    {\r\n      e.preventDefault();      \r\n      let d = await fetch(`${url}/del_subject?id=${e.currentTarget.dataset.s_id}`)\r\n      fetchData();\r\n    }\r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Предметы\" setActiveModal={setActiveModal} setDel={setDel} onDel={onDel} modal=\"add-subject\"/>            \r\n            <List>\r\n            {subjs !=null ?\r\n                    subjs.map(item =><Cell before={onDel?<Icon28BombOutline />:null}key={item.name} data-s_id={item._id} expandable onClick={onDel? del :onSubjectClick}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>);\r\n};\r\n\r\nexport default Subjects;\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Toms = ({ id,s_id,onTomClick,setActiveModal,toms, setToms }) => {\r\n    const [onDel,setDel] = useState(false);\r\n\r\n\r\n    useEffect( ()=>\r\n    {     \r\n        \r\n        console.log(toms);\r\n        fetchData();\r\n    },[toms]);\r\n    async function fetchData()  \r\n    {\r\n        // console.log(s_id);\r\n        let i = await fetch(`${url}/get_subject_toms?id=`+s_id);\r\n        let Toms = await i.json();\r\n        // console.log(toms);\r\n        let items=[];\r\n        for(let item of Toms)\r\n        {              \r\n            // console.log(item);\r\n            let r =await fetch(`${url}/get_tom?id=`+item);\r\n            let resp = await r.json(); \r\n            items.push(resp);            \r\n        } \r\n        if(s(items) !== s(toms)) setToms(items);\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    async function del(e)\r\n    {\r\n        console.log(e.currentTarget.dataset.t_id);          \r\n        e.preventDefault();      \r\n        let p = await fetch(`${url}/del_tom?id=${e.currentTarget.dataset.t_id}`);\r\n        fetchData();\r\n    }   \r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Разделы\" setActiveModal={setActiveModal} setDel={setDel} onDel={onDel} modal=\"add-tom\"/>            \r\n            <List>\r\n                {toms !=null ?\r\n                    toms.map(item =><Cell key={item.name} before={onDel?<Icon28BombOutline/>:null} data-t_id={item._id} expandable onClick={onDel? del: onTomClick}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>\r\n        );\r\n};\r\n\r\nexport default Toms;\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\nconst TasksList = ({ id,t_id,onTaskClick, fetchedUser, setActiveModal, tasks, setTasks}) => {\r\n    const [onDel,setDel] = useState(false);\r\n    \r\n    useEffect( ()=>\r\n    {                     \r\n        fetchData();\r\n    },[tasks]);\r\n\r\n    async function fetchData()  \r\n        {\r\n            let i = await fetch(`${url}/get_tom_tasks?id=`+t_id);\r\n            let Tasks = await i.json();\r\n            let items=[];\r\n            for(let item of Tasks)\r\n            {                \r\n                let r =await fetch(`${url}/get_task?id=`+item);\r\n                let resp = await r.json(); \r\n                items.push(resp);\r\n            }            \r\n            if(s(items) !== s(tasks)) setTasks(items);\r\n        }\r\n\r\n    async function del(e)\r\n    {\r\n      e.preventDefault();      \r\n      let d = await fetch(`${url}/del_task?id=${e.currentTarget.dataset.ts_id}`)\r\n      fetchData();\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    const Isdone = (doneers) =>\r\n    {\r\n        if(fetchedUser != null)\r\n        {            \r\n            let user = doneers.find(item => item == fetchedUser.id)            \r\n            if(user == null) return true;\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Задания\" setActiveModal={setActiveModal} setDel={setDel} onDel={onDel} modal=\"add-task\"/>            \r\n            <List>\r\n                {tasks !=null ?\r\n                    tasks.map(item =><Cell key={item.name}  data-ts_id={item._id} expandable onClick={onDel? del: onTaskClick} before={onDel ? <Icon28BombOutline/> :Isdone(item.doneers)? null :<Icon16Done/>}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>\r\n        );\r\n};\r\n\r\nexport default TasksList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner, Header, List} from '@vkontakte/vkui';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\nconst UserList = ({ users }) => {\r\n    const [UsersData,setUserData] = useState(null);    \r\n    useEffect(()=>\r\n    {\r\n        // Получить инфу всех пользователей\r\n        async function fetchData()  \r\n        {\r\n            let ids = users[0];\r\n            for(let user of users)\r\n            {\r\n                ids+=\",\"+user;\r\n            }\r\n            let result = null;\r\n            if(users.length >0)\r\n            {\r\n                let t = await fetch(`${url}/get_users_vk_info?ids=${ids}`);\r\n                let r = await t.json();\r\n                result = r.response; \r\n            }\r\n            else result = [];           \r\n            // Присвоить в хук             \r\n            setUserData(result);\r\n        }\r\n        fetchData(); \r\n\r\n    },[]);\r\n    return(\r\n        <Group header={<Header mode=\"secondary\">Сделали</Header>}>\r\n        <List>\r\n            {UsersData != null ? \r\n                (UsersData.length > 0 ? \r\n            UsersData.map(user =><Cell key={user.id} before={<Avatar src={user.photo_50}/>}>{user.last_name} {user.first_name}</Cell>)\r\n            :\r\n            <Cell>Будь первым!</Cell>)\r\n            :\r\n            <Spinner size=\"large\" />\r\n            }          \r\n        </List>\r\n      </Group>);\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner, Header,Div, List} from '@vkontakte/vkui';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\nconst CommentSection = ({ comments }) => {\r\n    const [UsersData,setUserData] = useState(null);    \r\n    useEffect(()=>\r\n    {\r\n        // Получить инфу всех пользователей\r\n        async function fetchData()  \r\n        {\r\n            let ids;\r\n            if(comments.length > 0)\r\n            ids = comments[0].id;\r\n            for(let comment of comments)\r\n            {\r\n                ids+=\",\"+comment.id;\r\n            }\r\n            let result = null;\r\n            if(comments.length >0)\r\n            {\r\n                let t = await fetch(`${url}/get_users_vk_info?ids=${ids}`);\r\n                let r = await t.json();\r\n                result = r.response; \r\n            }\r\n            else result = [];           \r\n            // Присвоить в хук             \r\n            setUserData(result);\r\n        }\r\n        fetchData(); \r\n\r\n    },[]);\r\n    return(\r\n        <Group header={<Header mode=\"secondary\">Коментарии</Header>}>\r\n        <List>\r\n            {UsersData != null ? \r\n                (UsersData.length > 0 ? \r\n            comments.map((comment) => { \r\n                let user = UsersData.find(u => u.id == comment.id); \r\n                return(<Cell \r\n                    key={comment.text} \r\n                    before={<Avatar size={48} src={user.photo_50} />} \r\n                    size=\"l\"\r\n                description={<Cell multiline>{comment.text}</Cell>}>\r\n                {user.last_name} {user.first_name}\r\n                </Cell>)})\r\n            :\r\n            <Cell>Здусь пусто</Cell>)\r\n            :\r\n            <Spinner size=\"large\" />\r\n            }          \r\n        </List>\r\n      </Group>);\r\n};\r\n// comments.find(item => item.id == UsersData.id).text\r\n{/* <Cell key={user.id} before={<Avatar src={user.photo_50}/>}>{user.last_name} {user.first_name}</Cell> */}\r\n\r\nexport default CommentSection;\r\n","import React, {  useState, useEffect, Component, componentDidMount } from 'react';\r\n\r\nimport ModalPage from '@vkontakte/vkui/dist/components/ModalPage/ModalPage'\r\nimport ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot'\r\nimport ModalPageHeader from '@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow'\r\n\r\nimport UserList from '../components/usersList';\r\nimport CommentSection from '../components/commentSection';\r\n\r\nimport {Cell,Header,List,FormLayoutGroup,Textarea, Input } from '@vkontakte/vkui';\r\n\r\nimport {Spinner,Div,Alert,FixedLayout} from '@vkontakte/vkui';\r\n\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\n\r\nconst TaskInfo = ({activeModal,setActiveModal,ts_id,t_id,s_id,setts_id,fetchedUser,fetchSubj, fetchToms,fetchTasks, setPopout, UserData}) => {    \r\n    const closeModal = () =>{\r\n        setts_id(null);\r\n\t\tsetActiveModal(null);\r\n    } \r\n    \r\n    async function doneTask() \r\n    {\r\n        setts_id(null);\r\n        setActiveModal(null);        \r\n        let t = await fetch(`${url}/done_task?id=${ts_id}&user=${fetchedUser.id}`);\r\n        let task = await t.json(); \r\n        fetchTasks();\r\n    }\r\n\r\n    const closePopout = () =>\r\n    {\r\n        setPopout(null);\r\n    }   \r\n    \r\n    async function AddSubj() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n            if(document.getElementById(\"SubName\").value.length == 0) setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Пустое имя</p>\r\n          </Alert>)\r\n          else{\r\n        setActiveModal(null);        \r\n        let t = await fetch(`${url}/add_subject?name=${document.getElementById(\"SubName\").value}`);\r\n        fetchSubj();\r\n          }\r\n        }\r\n        else setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Нет прав</p>\r\n          </Alert>)\r\n        \r\n    }\r\n    async function AddTom() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n        if(document.getElementById(\"TomName\").value.length == 0) setPopout(<Alert            \r\n            onClose={closePopout}\r\n          >\r\n            <h2>Ошибка</h2>\r\n            <p>Пустое имя</p>\r\n          </Alert>)\r\n          else{\r\n        setActiveModal(null);  \r\n        let t = await fetch(`${url}/add_subject_tom?id=${s_id}&name=${document.getElementById(\"TomName\").value}`);  \r\n        fetchToms(); \r\n          } \r\n        }\r\n        else setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Нет прав</p>\r\n          </Alert>)    \r\n    }\r\n    async function AddTask() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n        let data = {\r\n            name: document.getElementById(\"TaskName\").value,\r\n            bounty: document.getElementById(\"Bounty\").value,\r\n            about: document.getElementById(\"Discript\").value,\r\n            deadline: document.getElementById(\"Deadline\").value,\r\n        }\r\n        if(data.name.length ==0 || data.bounty.length ==0 || data.about.length ==0) setPopout(<Alert            \r\n        onClose={closePopout}\r\n        >\r\n        <h2>Ошибка</h2>\r\n        <p>Есть незаполненое поле</p>\r\n      </Alert>)\r\n      else\r\n      {\r\n        if(data.deadline.length == 0) data.deadline=0;      \r\n        setActiveModal(null);          \r\n        console.log(data);\r\n        let t = await fetch(`${url}/add_tom_task?id=${t_id}&name=${data.name}&bounty=${data.bounty}&about=${data.about}&deadline=${data.deadline}`);  \r\n        fetchTasks(); \r\n        } \r\n    }\r\n    else setPopout(<Alert onClose={closePopout}>\r\n        <h2>Ошибка</h2>\r\n        <p>Нет прав</p>\r\n      </Alert>)    \r\n    }\r\n\r\n\r\n    const [task,setTask]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData()  \r\n        {\r\n            let t = await fetch(`${url}/get_task?id=`+ts_id);\r\n            let task = await t.json();          \r\n            setTask(task);\r\n        }\r\n        if(activeModal==\"task_info\") fetchData();\r\n    });\r\n\r\n    const Isdone = () =>\r\n    {\r\n        if(fetchedUser != null && task != null && task != \"-2\")\r\n        {            \r\n            let user = task.doneers.find(item => item == fetchedUser.id)            \r\n            if(user == null) return true;\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    async function AddComment ()    \r\n    {\r\n        console.log(document.getElementById(\"commentary\").value);\r\n        let text = document.getElementById(\"commentary\").value;\r\n        let r = await fetch(`${url}/comment_task?id=${ts_id}&user=${fetchedUser.id}&text=${text}`);\r\n        let res = await r.json(); \r\n         \r\n        document.getElementById(\"commentary\").value='';\r\n    }\r\n\r\n\tconst agree = (item) =>{\r\n\t\t\r\n\t}\r\n    return (\r\n        <ModalRoot activeModal={activeModal}>\r\n\t\t\t\t<ModalPage id =\"task_info\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader\r\n                right={Isdone() ? <PanelHeaderButton onClick={doneTask}><Icon24Done style={{color: \"#00ff39\"}} /></PanelHeaderButton> : <p/>} >\r\n                        {task !=null && task != \"-2\" ? task.name : \"Loading...\"}\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {task !=null && task != \"-2\" ? \r\n                        <FormLayout> \r\n                                <Cell multiline>{task.discription}</Cell>\r\n                                <Cell description=\"За первое выполнение\">Награда: {task.bounty} rep</Cell>                               \r\n                                <UserList users={task.doneers}/>\r\n                                <CommentSection comments={task.comments}/>\r\n                                <Textarea id=\"commentary\" placeholder=\"Ваш комментарий\"/>\r\n                                <Button onClick={AddComment} size=\"l\">Добавить</Button>\r\n                        </FormLayout>\r\n\r\n                    :\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 30 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                \r\n                <ModalPage id =\"add-subject\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                       <Input id=\"SubName\"/>  \r\n                       <Button onClick={AddSubj} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-tom\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                       <Input id=\"TomName\"/>  \r\n                       <Button onClick={AddTom} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-task\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                        <Input id=\"TaskName\" top={\"Название\"}/>\r\n                        <Input id=\"Bounty\" top={\"Награда\"}/>\r\n                        <Textarea id=\"Discript\" top={\"Описание\"}/>\r\n                        <Input id=\"Deadline\" type={\"date\"} top={\"Дед-лайн\"}/>\r\n                        <Button onClick={AddTask} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n    );\r\n\r\n}\r\n\r\nexport default TaskInfo;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport {View} from '@vkontakte/vkui';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport Subjects from '../panels/Subjects';\r\nimport Toms from '../panels/Tom';\r\nimport TasksList from '../panels/Tasks';\r\nimport TaskInfo from '../modals/TaskInfo';\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Modal_page_task = 'task_info';\r\n\r\nconst Tasks = ({ id, fetchedUser, UserData }) => {\r\n    const [activePanel,setActivePanel] = useState(\"subj\"); \r\n    const[activeModal,setActiveModal] = useState(null);\r\n    const[popout,setPopout] = useState(null);\r\n    \r\n    const [toms,setToms] = useState(null);\r\n    const [subjs,setSubjects] = useState(null);\r\n    const [tasks,setTasks] = useState(null);\r\n\r\n\r\n    const [s_id,sets_id] = useState(null);  \r\n    const [t_id,sett_id] = useState(null);  \r\n    const [ts_id,setts_id] = useState(null); \r\n    useEffect(()=>\r\n    {\r\n    },[]);       \r\n    \r\n    async function fetchSubj()  \r\n    {   let r =await fetch(`${url}/get_subjects`);\r\n        let resp = await r.json(); \r\n        if(s(resp.items) !== s(subjs)) setSubjects(resp.items);\r\n    }\r\n\r\n    async function fetchToms()  \r\n    {\r\n        let i = await fetch(`${url}/get_subject_toms?id=`+s_id);\r\n        let Toms = await i.json();\r\n        let items=[];\r\n        for(let item of Toms)\r\n        {              \r\n            let r =await fetch(`${url}/get_tom?id=`+item);\r\n            let resp = await r.json(); \r\n            items.push(resp);            \r\n        } \r\n        if(s(items) !== s(toms)) setToms(items);\r\n    }\r\n\r\n    async function fetchTasks()  \r\n        {\r\n            let i = await fetch(`${url}/get_tom_tasks?id=`+t_id);\r\n            let Tasks = await i.json();\r\n            let items=[];\r\n            for(let item of Tasks)\r\n            {                \r\n                let r =await fetch(`${url}/get_task?id=`+item);\r\n                let resp = await r.json(); \r\n                items.push(resp);\r\n            } \r\n            if(s(items) !== s(tasks)) setTasks(items);\r\n        }\r\n\r\n    const onSubjectClick = e =>{\r\n        e.preventDefault();\t\r\n        console.log('Вперёд к разделам!');\r\n        setActivePanel(\"tome\");\r\n        sets_id(e.currentTarget.dataset.s_id)\r\n\t      }; \r\n\r\n    const onTomClick = e =>{\r\n          e.preventDefault();\t\r\n          console.log('Вперёд к заданиям!');\r\n          setActivePanel(\"task\");\r\n          sett_id(e.currentTarget.dataset.t_id)\r\n          };    \r\n\r\n    const onTaskClick = e =>\r\n    {\r\n      e.preventDefault();\t\r\n      console.log('Вперёд к информации о задании!');\r\n      setActiveModal(Modal_page_task);\r\n      setts_id(e.currentTarget.dataset.ts_id)\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    return(\r\n        <View header={false} popout={popout} id={id} activePanel={activePanel} modal={\r\n        <TaskInfo fetchedUser={fetchedUser} \r\n                  s_id={s_id} \r\n                  t_id={t_id} \r\n                  activeModal={activeModal} \r\n                  setts_id={setts_id} \r\n                  ts_id={ts_id}\r\n                  fetchToms={fetchToms} \r\n                  fetchSubj={fetchSubj}\r\n                  fetchTasks={fetchTasks}\r\n                  UserData={UserData}\r\n                  setPopout={setPopout}\r\n                  setActiveModal={setActiveModal}/>}>          \r\n          <Subjects onSubjectClick ={onSubjectClick} id=\"subj\" subjs={subjs} setSubjects={setSubjects} setActiveModal={setActiveModal}/>        \r\n          <Toms id=\"tome\" onTomClick={onTomClick} s_id={s_id} toms={toms} setToms={setToms} setActiveModal={setActiveModal}/>\r\n          <TasksList fetchedUser={fetchedUser} id=\"task\" onTaskClick={onTaskClick} t_id={t_id} tasks={tasks} setTasks={setTasks} setActiveModal={setActiveModal}/>                    \r\n        </View>);\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple,PanelHeader} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List,PanelHeaderContext,PanelHeaderContent,Avatar} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport url from \"../urls\";\r\n\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nconst Members = ({id}) => {\r\n    const [users,setUsers] = useState(null);\r\n    useEffect( ()=>\r\n    {     \r\n        fetchData();\r\n    },[users]);\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    } \r\n\r\n    async function fetchData()  \r\n        {\r\n            let mem =await fetch(`${url}/get_members`);\r\n            let members = await mem.json();   \r\n            let ids;\r\n            if(members.length>0)\r\n            {\r\n                ids=String(members[0].vk_id);\r\n                for(let member of members)\r\n                {       \r\n                    ids+=\",\"+String(member.vk_id);\r\n                } \r\n                let vk_in = await fetch(`${url}/get_users_vk_info?ids=${ids}`)\r\n                let vk_info = await vk_in.json();\r\n                vk_info = vk_info.response;\r\n                let data=[];               \r\n                for(let user of vk_info)\r\n                {\r\n                    data.push({\r\n                        firstName: user.first_name,\r\n                        lastName: user.last_name,\r\n                        photo: user.photo_50,\r\n                        rep: members.find(membe => membe.vk_id == user.id).rep\r\n                    })\r\n                }                \r\n                if(s(users) !== s(data)) setUsers(data);\r\n            } \r\n\r\n        }\r\n\r\n       \r\n\r\n    return(\r\n        <Panel id={id}>\r\n            <PanelHeader>\r\n                Пользователи\r\n            </PanelHeader>\r\n            <List>\r\n            {users ? users.map(user => \r\n                <Cell key={user.lastName+user.firstName}\r\n                  before={<Avatar src={user.photo} />}\r\n                  size=\"l\"\r\n                  description={\"Репутация: \"+user.rep}                  \r\n                >\r\n                  {user.lastName} {user.firstName}</Cell>):null}\r\n            </List>\r\n        </Panel>);\r\n};\r\n\r\nexport default Members;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {Epic,Tabbar,TabbarItem} from '@vkontakte/vkui'\nimport {Panel,\n\t\tPanelHeader} from '@vkontakte/vkui';\n\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline'; // Задания\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'; // Профиль\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline'; // Пользователи\n\nimport Profile from './panels/Profile';\n\nimport Tasks from './views/Tasks';\nimport Members from './panels/Members';\n\nimport url from \"./urls\";\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activeStory,setActiveStory] = useState('me');\n\tconst [activePanel, setActivePanel] = useState();\n\tconst [fetchedUser, setUser] = useState(null);\n    const [UserData,setUserData] = useState(null);    \n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n \n\tuseEffect(() => {\n\t\tbridge.send(\"VKWebAppInit\", {});\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst find = await fetch(`${url}/get_member?id=`+user.id);\n\t\t\tconst finded = await find.json();\n\t\t\tif(finded == \"-1\")\n\t\t\t{    \n\t\t\t\tconst add = await fetch(`${url}/add_member?vk_id=`+user.id);\n\t\t\t\tconst find = await fetch(`${url}/get_member?id=`+user.id);\n\t\t\t\tconst finded = await find.json();\n\t\t\t\tif(finded != \"-1\") setUserData(finded);\t\t\t\t\n\t\t\t}\n\t\t\telse setUserData(finded);\t\n\t\t\tsetUser(user);\n\t\t}\t\t\t\n\t\t\tfetchData();\n\t\t\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst onStoryChange = e =>{\t\n\t\tsetActiveStory(e.currentTarget.dataset.story);\n\t};\n\n\treturn (\n\t\t<Epic activeStory={activeStory} tabbar={\n\t\t  <Tabbar>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'me'}\n\t\t\t  data-story=\"me\"\n\t\t\t  text=\"Профиль\"\n\t\t\t><Icon28UserOutline /></TabbarItem>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'task'}\n\t\t\t  data-story=\"task\"\n\t\t\t//   label=\"12\"\n\t\t\t  text=\"Задания\"\n\t\t\t><Icon28BrainOutline /></TabbarItem>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'members'}\n\t\t\t  data-story=\"members\"\n\t\t\t  text=\"Пользователи\"\n\t\t\t><Icon28Users3Outline /></TabbarItem>\t\t\t\n\t\t  </Tabbar>\n\t\t}>\n\t\t  <View id=\"me\" activePanel=\"me\">\n\t\t\t<Profile id=\"me\" fetchedUser={fetchedUser} UserData={UserData}/>\t\t\t  \t\t\t\n\t\t  </View>\n\t\t  <Tasks fetchedUser={fetchedUser} UserData={UserData} id=\"task\"/>\t\t \n\t\t<View id=\"members\" activePanel=\"members\">\n\t\t\t<Members id=\"members\"/>\t\t\t\n\t\t</View>\t\t  \n\t\t</Epic>\n\t  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}