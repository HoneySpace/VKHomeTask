{"version":3,"sources":["img/persik.png","urls.js","panels/Profile.js","components/HeaderDrop.js","panels/Subjects.js","panels/Tom.js","panels/Tasks.js","components/usersList.js","components/commentSection.js","modals/TaskInfo.js","views/Tasks.js","panels/Members.js","App.js","panels/Persik.js","index.js"],"names":["module","exports","url","Profile","id","fetchedUser","go","UserData","useEffect","fetch","then","response","json","result","catch","err","console","log","title","before","photo_200","src","description","rep","first_name","last_name","HeaderDrop","Head","setActiveModal","modal","setDel","onDel","useState","contextOpened","setcontextOpened","Switch","style","padding","aside","transform","onClick","opened","onClose","e","preventDefault","Subjects","onSubjectClick","subjs","setSubjects","fetchData","a","r","resp","s","items","obj","JSON","stringify","del","currentTarget","dataset","s_id","separator","map","item","key","name","data-s_id","_id","expandable","Toms","onTomClick","toms","setToms","i","push","t_id","data-t_id","TasksList","onTaskClick","tasks","setTasks","Tasks","ts_id","Isdone","doneers","find","data-ts_id","UserList","users","UsersData","setUserData","ids","user","length","t","header","mode","photo_50","size","CommentSection","comments","comment","u","text","multiline","TaskInfo","activeModal","setts_id","fetchSubj","fetchToms","fetchTasks","setPopout","closeModal","closePopout","isHead","document","getElementById","value","data","bounty","about","deadline","task","setTask","dynamicContentHeight","right","color","discription","placeholder","marginBottom","top","type","activePanel","setActivePanel","popout","sets_id","sett_id","Tom","Members","setUsers","mem","members","String","vk_id","member","vk_in","vk_info","firstName","lastName","photo","memb","App","platform","activeStory","setActiveStory","setUser","bridge","send","subscribe","detail","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","onStoryChange","story","tabbar","selected","data-story","ReactDOM","render"],"mappings":"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","file":"static/js/main.2d225a2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","const url = \"https://hscomhometask.herokuapp.com\";\r\nexport default url;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Profile = ({ id, go, fetchedUser,UserData }) => {\r\n    useEffect(()=>{\r\n    if(fetchedUser != null){\r\n        //Постоянно вызывает, фиксить?\r\n    fetch(`${url}/add_member?vk_id=`+fetchedUser.id)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n            try\r\n            {\r\n\t\t\t\tif (result == \"1\") {\r\n\r\n\t\t\t\t}else{\r\n\r\n                }                \r\n            } catch(err){ console.log(err);\r\n        }\r\n        }).catch(err => console.log(err));            \r\n    }});\r\n    return(\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Профиль</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={UserData ? `Репутация: ${UserData.rep}` : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\t\t\r\n\t</Panel>);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner,PanelHeaderSimple, PanelHeaderContent,PanelHeaderContext, Header,Div, List} from '@vkontakte/vkui';\r\n\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\n\r\n\r\nconst HeaderDrop = ({Head,setActiveModal,modal,setDel,onDel}) => {\r\n    const [contextOpened,setcontextOpened] = useState(false);\r\n\r\n    const Switch= () =>\r\n    {\r\n        setcontextOpened(!contextOpened)\r\n    }\r\n\r\n    const onAddClick = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('Сейчас добавим');\r\n        Switch();        \r\n        setActiveModal(modal);\r\n    }\r\n    const onDelClick = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('Удаляем...'); \r\n        Switch();\r\n        setDel(!onDel);     \r\n    }\r\n\r\n    return(<Div style={{padding:0}}>\r\n        <PanelHeaderSimple ><PanelHeaderContent\r\n              aside={<Icon24Dropdown style={{ transform: `rotate(${contextOpened ? '180deg' : '0'})` }} />}\r\n              onClick={Switch}\r\n            >\r\n              {Head}\r\n            </PanelHeaderContent></PanelHeaderSimple >\r\n            <PanelHeaderContext opened={contextOpened} onClose={()=>{}}>\r\n            <List>\r\n              <Cell onClick={onAddClick}                                            \r\n              >\r\n                Добавить\r\n              </Cell>\r\n              <Cell  onClick={onDelClick}              \r\n              >\r\n                {onDel?\"Закончить удаление\":\"Удалить\"}\r\n              </Cell>\r\n            </List>\r\n          </PanelHeaderContext></Div>)\r\n};\r\n\r\nexport default HeaderDrop;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List,PanelHeaderContext,PanelHeaderContent} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport url from \"../urls\";\r\n\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nconst Subjects = ({ id,onSubjectClick,setActiveModal,subjs, setSubjects}) => {\r\n    const [onDel,setDel] = useState(false);\r\n    useEffect( ()=>\r\n    {     \r\n        fetchData();\r\n    },[subjs]);\r\n\r\n    async function fetchData()  \r\n        {\r\n            let r =await fetch(`${url}/get_subjects`);\r\n            let resp = await r.json();        \r\n            if(s(resp.items) !== s(subjs)) setSubjects(resp.items);\r\n        }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    async function del(e)\r\n    {\r\n      e.preventDefault();      \r\n      let d = await fetch(`${url}/del_subject?id=${e.currentTarget.dataset.s_id}`)\r\n      fetchData();\r\n    }\r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Предметы\" setActiveModal={setActiveModal} setDel={setDel} onDel={onDel} modal=\"add-subject\"/>            \r\n            <List>\r\n            {subjs !=null ?\r\n                    subjs.map(item =><Cell before={onDel?<Icon28BombOutline />:null}key={item.name} data-s_id={item._id} expandable onClick={onDel? del :onSubjectClick}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>);\r\n};\r\n\r\nexport default Subjects;\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Toms = ({ id,s_id,onTomClick,setActiveModal,toms, setToms }) => {\r\n    const [onDel,setDel] = useState(false);\r\n\r\n\r\n    useEffect( ()=>\r\n    {     \r\n        \r\n        console.log(toms);\r\n        fetchData();\r\n    },[toms]);\r\n    async function fetchData()  \r\n    {\r\n        // console.log(s_id);\r\n        let i = await fetch(`${url}/get_subject_toms?id=`+s_id);\r\n        let Toms = await i.json();\r\n        // console.log(toms);\r\n        let items=[];\r\n        for(let item of Toms)\r\n        {              \r\n            // console.log(item);\r\n            let r =await fetch(`${url}/get_tom?id=`+item);\r\n            let resp = await r.json(); \r\n            items.push(resp);            \r\n        } \r\n        if(s(items) !== s(toms)) setToms(items);\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    async function del(e)\r\n    {\r\n        console.log(e.currentTarget.dataset.t_id);          \r\n        e.preventDefault();      \r\n        let p = await fetch(`${url}/del_tom?id=${e.currentTarget.dataset.t_id}`);\r\n        fetchData();\r\n    }   \r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Разделы\" setActiveModal={setActiveModal} setDel={setDel} onDel={onDel} modal=\"add-tom\"/>            \r\n            <List>\r\n                {toms !=null ?\r\n                    toms.map(item =><Cell key={item.name} before={onDel?<Icon28BombOutline/>:null} data-t_id={item._id} expandable onClick={onDel? del: onTomClick}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>\r\n        );\r\n};\r\n\r\nexport default Toms;\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\nconst TasksList = ({ id,t_id,onTaskClick, fetchedUser, setActiveModal, tasks, setTasks}) => {\r\n    const [onDel,setDel] = useState(false);\r\n    \r\n    useEffect( ()=>\r\n    {                     \r\n        fetchData();\r\n    },[tasks]);\r\n\r\n    async function fetchData()  \r\n        {\r\n            let i = await fetch(`${url}/get_tom_tasks?id=`+t_id);\r\n            let Tasks = await i.json();\r\n            let items=[];\r\n            for(let item of Tasks)\r\n            {                \r\n                let r =await fetch(`${url}/get_task?id=`+item);\r\n                let resp = await r.json(); \r\n                items.push(resp);\r\n            }            \r\n            if(s(items) !== s(tasks)) setTasks(items);\r\n        }\r\n\r\n    async function del(e)\r\n    {\r\n      e.preventDefault();      \r\n      let d = await fetch(`${url}/del_task?id=${e.currentTarget.dataset.ts_id}`)\r\n      fetchData();\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    const Isdone = (doneers) =>\r\n    {\r\n        if(fetchedUser != null)\r\n        {            \r\n            let user = doneers.find(item => item == fetchedUser.id)            \r\n            if(user == null) return true;\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Задания\" setActiveModal={setActiveModal} setDel={setDel} onDel={onDel} modal=\"add-task\"/>            \r\n            <List>\r\n                {tasks !=null ?\r\n                    tasks.map(item =><Cell key={item.name}  data-ts_id={item._id} expandable onClick={onDel? del: onTaskClick} before={onDel ? <Icon28BombOutline/> :Isdone(item.doneers)? null :<Icon16Done/>}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>\r\n        );\r\n};\r\n\r\nexport default TasksList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner, Header, List} from '@vkontakte/vkui';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\nconst UserList = ({ users }) => {\r\n    const [UsersData,setUserData] = useState(null);    \r\n    useEffect(()=>\r\n    {\r\n        // Получить инфу всех пользователей\r\n        async function fetchData()  \r\n        {\r\n            let ids = users[0];\r\n            for(let user of users)\r\n            {\r\n                ids+=\",\"+user;\r\n            }\r\n            let result = null;\r\n            if(users.length >0)\r\n            {\r\n                let t = await fetch(`${url}/get_users_vk_info?ids=${ids}`);\r\n                let r = await t.json();\r\n                result = r.response; \r\n            }\r\n            else result = [];           \r\n            // Присвоить в хук             \r\n            setUserData(result);\r\n        }\r\n        fetchData(); \r\n\r\n    },[]);\r\n    return(\r\n        <Group header={<Header mode=\"secondary\">Сделали</Header>}>\r\n        <List>\r\n            {UsersData != null ? \r\n                (UsersData.length > 0 ? \r\n            UsersData.map(user =><Cell key={user.id} before={<Avatar src={user.photo_50}/>}>{user.last_name} {user.first_name}</Cell>)\r\n            :\r\n            <Cell>Будь первым!</Cell>)\r\n            :\r\n            <Spinner size=\"large\" />\r\n            }          \r\n        </List>\r\n      </Group>);\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner, Header,Div, List} from '@vkontakte/vkui';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\nconst CommentSection = ({ comments }) => {\r\n    const [UsersData,setUserData] = useState(null);    \r\n    useEffect(()=>\r\n    {\r\n        // Получить инфу всех пользователей\r\n        async function fetchData()  \r\n        {\r\n            let ids;\r\n            if(comments.length > 0)\r\n            ids = comments[0].id;\r\n            for(let comment of comments)\r\n            {\r\n                ids+=\",\"+comment.id;\r\n            }\r\n            let result = null;\r\n            if(comments.length >0)\r\n            {\r\n                let t = await fetch(`${url}/get_users_vk_info?ids=${ids}`);\r\n                let r = await t.json();\r\n                result = r.response; \r\n            }\r\n            else result = [];           \r\n            // Присвоить в хук             \r\n            setUserData(result);\r\n        }\r\n        fetchData(); \r\n\r\n    },[]);\r\n    return(\r\n        <Group header={<Header mode=\"secondary\">Коментарии</Header>}>\r\n        <List>\r\n            {UsersData != null ? \r\n                (UsersData.length > 0 ? \r\n            comments.map((comment) => { \r\n                let user = UsersData.find(u => u.id == comment.id); \r\n                return(<Cell \r\n                    key={comment.text} \r\n                    before={<Avatar size={48} src={user.photo_50} />} \r\n                    size=\"l\"\r\n                description={<Cell multiline>{comment.text}</Cell>}>\r\n                {user.last_name} {user.first_name}\r\n                </Cell>)})\r\n            :\r\n            <Cell>Здусь пусто</Cell>)\r\n            :\r\n            <Spinner size=\"large\" />\r\n            }          \r\n        </List>\r\n      </Group>);\r\n};\r\n// comments.find(item => item.id == UsersData.id).text\r\n{/* <Cell key={user.id} before={<Avatar src={user.photo_50}/>}>{user.last_name} {user.first_name}</Cell> */}\r\n\r\nexport default CommentSection;\r\n","import React, {  useState, useEffect, Component, componentDidMount } from 'react';\r\n\r\nimport ModalPage from '@vkontakte/vkui/dist/components/ModalPage/ModalPage'\r\nimport ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot'\r\nimport ModalPageHeader from '@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow'\r\n\r\nimport UserList from '../components/usersList';\r\nimport CommentSection from '../components/commentSection';\r\n\r\nimport {Cell,Header,List,FormLayoutGroup,Textarea, Input } from '@vkontakte/vkui';\r\n\r\nimport {Spinner,Div,Alert,FixedLayout} from '@vkontakte/vkui';\r\n\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\n\r\nconst TaskInfo = ({activeModal,setActiveModal,ts_id,t_id,s_id,setts_id,fetchedUser,fetchSubj, fetchToms,fetchTasks, setPopout, UserData}) => {    \r\n    const closeModal = () =>{\r\n        setts_id(null);\r\n\t\tsetActiveModal(null);\r\n    } \r\n    \r\n    async function doneTask() \r\n    {\r\n        setts_id(null);\r\n        setActiveModal(null);        \r\n        let t = await fetch(`${url}/done_task?id=${ts_id}&user=${fetchedUser.id}`);\r\n        let task = await t.json(); \r\n        fetchTasks();\r\n    }\r\n\r\n    const closePopout = () =>\r\n    {\r\n        setPopout(null);\r\n    }   \r\n    \r\n    async function AddSubj() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n            if(document.getElementById(\"SubName\").value.length == 0) setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Пустое имя</p>\r\n          </Alert>)\r\n          else{\r\n        setActiveModal(null);        \r\n        let t = await fetch(`${url}/add_subject?name=${document.getElementById(\"SubName\").value}`);\r\n        fetchSubj();\r\n          }\r\n        }\r\n        else setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Нет прав</p>\r\n          </Alert>)\r\n        \r\n    }\r\n    async function AddTom() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n        if(document.getElementById(\"TomName\").value.length == 0) setPopout(<Alert            \r\n            onClose={closePopout}\r\n          >\r\n            <h2>Ошибка</h2>\r\n            <p>Пустое имя</p>\r\n          </Alert>)\r\n          else{\r\n        setActiveModal(null);  \r\n        let t = await fetch(`${url}/add_subject_tom?id=${s_id}&name=${document.getElementById(\"TomName\").value}`);  \r\n        fetchToms(); \r\n          } \r\n        }\r\n        else setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Нет прав</p>\r\n          </Alert>)    \r\n    }\r\n    async function AddTask() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n        let data = {\r\n            name: document.getElementById(\"TaskName\").value,\r\n            bounty: document.getElementById(\"Bounty\").value,\r\n            about: document.getElementById(\"Discript\").value,\r\n            deadline: document.getElementById(\"Deadline\").value,\r\n        }\r\n        if(data.name.length ==0 || data.bounty.length ==0 || data.about.length ==0) setPopout(<Alert            \r\n        onClose={closePopout}\r\n        >\r\n        <h2>Ошибка</h2>\r\n        <p>Есть незаполненое поле</p>\r\n      </Alert>)\r\n      else\r\n      {\r\n        if(data.deadline.length == 0) data.deadline=0;      \r\n        setActiveModal(null);          \r\n        console.log(data);\r\n        let t = await fetch(`${url}/add_tom_task?id=${t_id}&name=${data.name}&bounty=${data.bounty}&about=${data.about}&deadline=${data.deadline}`);  \r\n        fetchTasks(); \r\n        } \r\n    }\r\n    else setPopout(<Alert onClose={closePopout}>\r\n        <h2>Ошибка</h2>\r\n        <p>Нет прав</p>\r\n      </Alert>)    \r\n    }\r\n\r\n\r\n    const [task,setTask]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData()  \r\n        {\r\n            let t = await fetch(`${url}/get_task?id=`+ts_id);\r\n            let task = await t.json();          \r\n            setTask(task);\r\n        }\r\n        if(activeModal==\"task_info\") fetchData();\r\n    });\r\n\r\n    const Isdone = () =>\r\n    {\r\n        if(fetchedUser != null && task != null && task != \"-2\")\r\n        {            \r\n            let user = task.doneers.find(item => item == fetchedUser.id)            \r\n            if(user == null) return true;\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    async function AddComment ()    \r\n    {\r\n        console.log(document.getElementById(\"commentary\").value);\r\n        let text = document.getElementById(\"commentary\").value;\r\n        let r = await fetch(`${url}/comment_task?id=${ts_id}&user=${fetchedUser.id}&text=${text}`);\r\n        let res = await r.json(); \r\n         \r\n        document.getElementById(\"commentary\").value='';\r\n    }\r\n\r\n\tconst agree = (item) =>{\r\n\t\t\r\n\t}\r\n    return (\r\n        <ModalRoot activeModal={activeModal}>\r\n\t\t\t\t<ModalPage id =\"task_info\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader\r\n                right={Isdone() ? <PanelHeaderButton onClick={doneTask}><Icon24Done style={{color: \"#00ff39\"}} /></PanelHeaderButton> : <p/>} >\r\n                        {task !=null && task != \"-2\" ? task.name : \"Loading...\"}\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {task !=null && task != \"-2\" ? \r\n                        <FormLayout> \r\n                                <Cell multiline>{task.discription}</Cell>\r\n                                <Cell description=\"За первое выполнение\">Награда: {task.bounty} rep</Cell>                               \r\n                                <UserList users={task.doneers}/>\r\n                                <CommentSection comments={task.comments}/>\r\n                                <Textarea id=\"commentary\" placeholder=\"Ваш комментарий\"/>\r\n                                <Button onClick={AddComment} size=\"l\">Добавить</Button>\r\n                        </FormLayout>\r\n\r\n                    :\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 30 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-subject\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                       <Input id=\"SubName\"/>  \r\n                       <Button onClick={AddSubj} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-tom\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                       <Input id=\"TomName\"/>  \r\n                       <Button onClick={AddTom} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-task\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                        <Input id=\"TaskName\" top={\"Название\"}/>\r\n                        <Input id=\"Bounty\" top={\"Награда\"}/>\r\n                        <Textarea id=\"Discript\" top={\"Описание\"}/>\r\n                        <Input id=\"Deadline\" type={\"date\"} top={\"Дед-лайн\"}/>\r\n                        <Button onClick={AddTask} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n    );\r\n\r\n}\r\n\r\nexport default TaskInfo;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport {View} from '@vkontakte/vkui';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport Subjects from '../panels/Subjects';\r\nimport Toms from '../panels/Tom';\r\nimport TasksList from '../panels/Tasks';\r\nimport TaskInfo from '../modals/TaskInfo';\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Modal_page_task = 'task_info';\r\n\r\nconst Tasks = ({ id, fetchedUser, UserData }) => {\r\n    const [activePanel,setActivePanel] = useState(\"subj\"); \r\n    const[activeModal,setActiveModal] = useState(null);\r\n    const[popout,setPopout] = useState(null);\r\n    \r\n    const [toms,setToms] = useState(null);\r\n    const [subjs,setSubjects] = useState(null);\r\n    const [tasks,setTasks] = useState(null);\r\n\r\n\r\n    const [s_id,sets_id] = useState(null);  \r\n    const [t_id,sett_id] = useState(null);  \r\n    const [ts_id,setts_id] = useState(null); \r\n    useEffect(()=>\r\n    {\r\n    },[]);       \r\n    \r\n    async function fetchSubj()  \r\n    {   let r =await fetch(`${url}/get_subjects`);\r\n        let resp = await r.json(); \r\n        if(s(resp.items) !== s(subjs)) setSubjects(resp.items);\r\n    }\r\n\r\n    async function fetchToms()  \r\n    {\r\n        let i = await fetch(`${url}/get_subject_toms?id=`+s_id);\r\n        let Toms = await i.json();\r\n        let items=[];\r\n        for(let item of Toms)\r\n        {              \r\n            let r =await fetch(`${url}/get_tom?id=`+item);\r\n            let resp = await r.json(); \r\n            items.push(resp);            \r\n        } \r\n        if(s(items) !== s(toms)) setToms(items);\r\n    }\r\n\r\n    async function fetchTasks()  \r\n        {\r\n            let i = await fetch(`${url}/get_tom_tasks?id=`+t_id);\r\n            let Tasks = await i.json();\r\n            let items=[];\r\n            for(let item of Tasks)\r\n            {                \r\n                let r =await fetch(`${url}/get_task?id=`+item);\r\n                let resp = await r.json(); \r\n                items.push(resp);\r\n            } \r\n            if(s(items) !== s(tasks)) setTasks(items);\r\n        }\r\n\r\n    const onSubjectClick = e =>{\r\n        e.preventDefault();\t\r\n        console.log('Вперёд к разделам!');\r\n        setActivePanel(\"tome\");\r\n        sets_id(e.currentTarget.dataset.s_id)\r\n\t      }; \r\n\r\n    const onTomClick = e =>{\r\n          e.preventDefault();\t\r\n          console.log('Вперёд к заданиям!');\r\n          setActivePanel(\"task\");\r\n          sett_id(e.currentTarget.dataset.t_id)\r\n          };    \r\n\r\n    const onTaskClick = e =>\r\n    {\r\n      e.preventDefault();\t\r\n      console.log('Вперёд к информации о задании!');\r\n      setActiveModal(Modal_page_task);\r\n      setts_id(e.currentTarget.dataset.ts_id)\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    return(\r\n        <View header={false} popout={popout} id={id} activePanel={activePanel} modal={\r\n        <TaskInfo fetchedUser={fetchedUser} \r\n                  s_id={s_id} \r\n                  t_id={t_id} \r\n                  activeModal={activeModal} \r\n                  setts_id={setts_id} \r\n                  ts_id={ts_id}\r\n                  fetchToms={fetchToms} \r\n                  fetchSubj={fetchSubj}\r\n                  fetchTasks={fetchTasks}\r\n                  UserData={UserData}\r\n                  setPopout={setPopout}\r\n                  setActiveModal={setActiveModal}/>}>          \r\n          <Subjects onSubjectClick ={onSubjectClick} id=\"subj\" subjs={subjs} setSubjects={setSubjects} setActiveModal={setActiveModal}/>        \r\n          <Toms id=\"tome\" onTomClick={onTomClick} s_id={s_id} toms={toms} setToms={setToms} setActiveModal={setActiveModal}/>\r\n          <TasksList fetchedUser={fetchedUser} id=\"task\" onTaskClick={onTaskClick} t_id={t_id} tasks={tasks} setTasks={setTasks} setActiveModal={setActiveModal}/>                    \r\n        </View>);\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple,PanelHeader} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List,PanelHeaderContext,PanelHeaderContent,Avatar} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport url from \"../urls\";\r\n\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nconst Members = ({id}) => {\r\n    const [users,setUsers] = useState(null);\r\n    useEffect( ()=>\r\n    {     \r\n        fetchData();\r\n    },[users]);\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    } \r\n\r\n    async function fetchData()  \r\n        {\r\n            let mem =await fetch(`${url}/get_members`);\r\n            let members = await mem.json(); \r\n            let ids;\r\n            if(members.length>0)\r\n            {\r\n                ids=String(members[0].vk_id);\r\n                for(let member of members)\r\n                {\r\n                    ids+=\",\"+String(member.vk_id)\r\n                } \r\n                let vk_in = await fetch(`${url}/get_users_vk_info?ids=${ids}`)\r\n                let vk_info = await vk_in.json();\r\n                vk_info = vk_info.response;\r\n                let data=[];\r\n                for(let user of vk_info)\r\n                {\r\n                    data.push({\r\n                        firstName: user.first_name,\r\n                        lastName: user.last_name,\r\n                        photo: user.photo_50,\r\n                        rep: members.find(memb => memb.vk_id = user.id).rep\r\n                    })\r\n                }\r\n                if(s(users) !== s(data)) setUsers(data);\r\n            } \r\n\r\n        }\r\n\r\n       \r\n\r\n    return(\r\n        <Panel id={id}>\r\n            <PanelHeader>\r\n                Пользователи\r\n            </PanelHeader>\r\n            <List>\r\n            {users ? users.map(user => \r\n                <Cell key={user.lastName+user.firstName}\r\n                  before={<Avatar src={user.photo} />}\r\n                  size=\"l\"\r\n                  description={\"Репутация: \"+user.rep}                  \r\n                >\r\n                  {user.lastName} {user.firstName}</Cell>):null}\r\n            </List>\r\n        </Panel>);\r\n};\r\n\r\nexport default Members;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {Epic,Tabbar,TabbarItem} from '@vkontakte/vkui'\nimport {Panel,\n\t\tPanelHeader} from '@vkontakte/vkui';\n\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline'; // Задания\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'; // Профиль\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline'; // Пользователи\n\nimport Profile from './panels/Profile';\n\nimport Tasks from './views/Tasks';\nimport Members from './panels/Members';\n\nimport url from \"./urls\";\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activeStory,setActiveStory] = useState('me');\n\tconst [activePanel, setActivePanel] = useState();\n\tconst [fetchedUser, setUser] = useState(null);\n    const [UserData,setUserData] = useState(null);    \n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n \n\tuseEffect(() => {\n\t\tbridge.send(\"VKWebAppInit\", {});\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tfetch(`${url}/get_member?id=`+user.id)\n        \t.then(response => response.json())\n        \t.then(result =>{\n        \ttry\n        \t{\n           \t\tif (result == \"-1\" || result == \"-2\") {\n                console.log(\"Ошибка\")\n            }else{\n                setUserData(result);\n            }                \n        \t} catch(err){ console.log(err);\n    }\n    }).catch(err => console.log(err))\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst onStoryChange = e =>{\t\n\t\tsetActiveStory(e.currentTarget.dataset.story);\n\t};\n\n\treturn (\n\t\t<Epic activeStory={activeStory} tabbar={\n\t\t  <Tabbar>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'me'}\n\t\t\t  data-story=\"me\"\n\t\t\t  text=\"Профиль\"\n\t\t\t><Icon28UserOutline /></TabbarItem>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'task'}\n\t\t\t  data-story=\"task\"\n\t\t\t//   label=\"12\"\n\t\t\t  text=\"Задания\"\n\t\t\t><Icon28BrainOutline /></TabbarItem>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'members'}\n\t\t\t  data-story=\"members\"\n\t\t\t  text=\"Пользователи\"\n\t\t\t><Icon28Users3Outline /></TabbarItem>\t\t\t\n\t\t  </Tabbar>\n\t\t}>\n\t\t  <View id=\"me\" activePanel=\"me\">\n\t\t\t<Profile id=\"me\" fetchedUser={fetchedUser} UserData={UserData}/>\t\t\t  \t\t\t\n\t\t  </View>\n\t\t  <Tasks fetchedUser={fetchedUser} UserData={UserData} id=\"task\"/>\t\t \n\t\t<View id=\"members\" activePanel=\"members\">\n\t\t\t<Members id=\"members\"/>\t\t\t\n\t\t</View>\t\t  \n\t\t</Epic>\n\t  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}