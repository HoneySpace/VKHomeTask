{"version":3,"sources":["img/persik.png","urls.js","panels/Profile.js","components/HeaderDrop.js","panels/Subjects.js","panels/Tom.js","panels/Tasks.js","components/usersList.js","components/commentSection.js","modals/TaskInfo.js","views/Tasks.js","panels/Members.js","App.js","panels/Persik.js","index.js"],"names":["module","exports","url","Profile","id","fetchedUser","go","UserData","setUserData","a","fetch","find","json","finded","JSON","stringify","useEffect","fetchData","title","before","photo_200","src","description","rep","first_name","last_name","HeaderDrop","Head","setActiveModal","setActivePanel","modal","setDel","onDel","useState","contextOpened","setcontextOpened","Switch","style","padding","left","onClick","e","preventDefault","console","log","aside","isHead","transform","opened","onClose","Subjects","onSubjectClick","subjs","setSubjects","r","resp","s","items","obj","del","currentTarget","dataset","s_id","separator","map","item","key","name","data-s_id","_id","expandable","Toms","onTomClick","toms","setToms","i","push","t_id","data-t_id","TasksList","onTaskClick","tasks","setTasks","Tasks","ts_id","Isdone","doneers","data-ts_id","UserList","users","UsersData","ids","user","result","length","t","response","header","mode","photo_50","size","CommentSection","comments","comment","u","undefined","text","multiline","TaskInfo","activeModal","setts_id","fetchSubj","fetchToms","fetchTasks","setPopout","closeModal","closePopout","document","getElementById","value","AddTask","data","bounty","about","deadline","task","setTask","dynamicContentHeight","right","discription","placeholder","marginBottom","top","type","activePanel","popout","sets_id","sett_id","Tom","Members","setUsers","mem","members","String","vk_id","member","vk_in","vk_info","firstName","lastName","photo","membe","sort","b","App","platform","activeStory","setActiveStory","setUser","bridge","send","subscribe","detail","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","onStoryChange","story","tabbar","selected","data-story","ReactDOM","render"],"mappings":"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","file":"static/js/main.e01c6e47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","const url = \"https://hscomhometask.herokuapp.com\";\r\nexport default url;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Profile = ({ id, go, fetchedUser,UserData,setUserData }) => {\r\n    useEffect(()=>{\r\n\t\tif(fetchedUser !=null) fetchData();\r\n\t},[UserData]);\r\n\t\r\n\tasync function fetchData() {\r\n\t\tconst find = await fetch(`${url}/get_member?id=`+fetchedUser.id);\r\n\t\tconst finded = await find.json();\t\t\r\n\t\tif(finded != \"-1\" && JSON.stringify(finded) !== JSON.stringify(UserData)) setUserData(finded);\r\n\t}\r\n\r\n    return(\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Профиль</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={UserData ? `Репутация: ${UserData.rep}` : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\t\t\r\n\t</Panel>);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner,PanelHeaderSimple, PanelHeaderContent,PanelHeaderContext, Header,Div, List} from '@vkontakte/vkui';\r\n\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\n\r\nconst HeaderDrop = ({Head,setActiveModal,setActivePanel,UserData,modal,setDel,onDel}) => {\r\n    const [contextOpened,setcontextOpened] = useState(false);\r\n\r\n    const Switch= () =>\r\n    {\r\n        setcontextOpened(!contextOpened)\r\n    }\r\n\r\n    const onBack = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('обратно...'); \r\n        switch (Head) {\r\n          case \"Задания\":\r\n              setActivePanel(\"tome\");\r\n            break;\r\n          case \"Разделы\":\r\n              setActivePanel(\"subj\");            \r\n            break;\r\n          default:\r\n            break;\r\n        }        \r\n    }\r\n\r\n    const onAddClick = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('Сейчас добавим');\r\n        Switch();        \r\n        setActiveModal(modal);\r\n    }    \r\n    const onDelClick = e =>\r\n    {\r\n        e.preventDefault();\t\r\n        console.log('Удаляем...'); \r\n        Switch();\r\n        setDel(!onDel);     \r\n    }\r\n\r\n    return(<Div style={{padding:0}}>\r\n        <PanelHeaderSimple left={Head == \"Предметы\"?null:<Icon24Back onClick={onBack}/>}><PanelHeaderContent\r\n              aside={UserData != null && UserData.isHead ? <Icon24Dropdown style={{ transform: `rotate(${contextOpened ? '180deg' : '0'})` }} /> : null}\r\n              onClick={UserData != null && UserData.isHead ? Switch:()=>{}}\r\n            >\r\n              {Head}\r\n            </PanelHeaderContent></PanelHeaderSimple >\r\n            <PanelHeaderContext opened={contextOpened} onClose={()=>{}}>\r\n            <List>\r\n              <Cell onClick={onAddClick}                                            \r\n              >\r\n                Добавить\r\n              </Cell>\r\n              <Cell  onClick={onDelClick}              \r\n              >\r\n                {onDel?\"Закончить удаление\":\"Удалить\"}\r\n              </Cell>\r\n            </List>\r\n          </PanelHeaderContext></Div>)\r\n};\r\n\r\nexport default HeaderDrop;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List,PanelHeaderContext,PanelHeaderContent} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport url from \"../urls\";\r\n\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nconst Subjects = ({ id,onSubjectClick,setActiveModal,subjs,UserData, setSubjects}) => {\r\n    const [onDel,setDel] = useState(false);\r\n    useEffect( ()=>\r\n    {     \r\n        fetchData();\r\n    },[subjs]);\r\n\r\n    async function fetchData()  \r\n        {\r\n            let r =await fetch(`${url}/get_subjects`);\r\n            let resp = await r.json();        \r\n            if(s(resp.items) !== s(subjs)) setSubjects(resp.items);\r\n        }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    async function del(e)\r\n    {\r\n      e.preventDefault();      \r\n      let d = await fetch(`${url}/del_subject?id=${e.currentTarget.dataset.s_id}`)\r\n      fetchData();\r\n    }\r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Предметы\" setActiveModal={setActiveModal} UserData={UserData} setDel={setDel} onDel={onDel} modal=\"add-subject\"/>            \r\n            <List>\r\n            {subjs !=null ?\r\n                    subjs.map(item =><Cell before={onDel?<Icon28BombOutline />:null}key={item.name} data-s_id={item._id} expandable onClick={onDel? del :onSubjectClick}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>);\r\n};\r\n\r\nexport default Subjects;\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Toms = ({ id,s_id,onTomClick,setActiveModal, setActivePanel,UserData, toms, setToms }) => {\r\n    const [onDel,setDel] = useState(false);\r\n\r\n\r\n    useEffect( ()=>\r\n    {             \r\n        console.log(\"Появился\");\r\n        fetchData();\r\n    },[toms]);\r\n    async function fetchData()  \r\n    {\r\n        // console.log(s_id);\r\n        let i = await fetch(`${url}/get_subject_toms?id=`+s_id);\r\n        let Toms = await i.json();\r\n        // console.log(toms);\r\n        let items=[];\r\n        for(let item of Toms)\r\n        {              \r\n            // console.log(item);\r\n            let r =await fetch(`${url}/get_tom?id=`+item);\r\n            let resp = await r.json(); \r\n            items.push(resp);            \r\n        } \r\n        if(s(items) !== s(toms)) setToms(items);\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    async function del(e)\r\n    {\r\n        console.log(e.currentTarget.dataset.t_id);          \r\n        e.preventDefault();      \r\n        let p = await fetch(`${url}/del_tom?id=${e.currentTarget.dataset.t_id}`);\r\n        fetchData();\r\n    }   \r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Разделы\" setActiveModal={setActiveModal} UserData={UserData} setActivePanel={setActivePanel} setDel={setDel} onDel={onDel} modal=\"add-tom\"/>            \r\n            <List>\r\n                {toms !=null ?\r\n                    toms.map(item =><Cell key={item.name} before={onDel?<Icon28BombOutline/>:null} data-t_id={item._id} expandable onClick={onDel? del: onTomClick}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>\r\n        );\r\n};\r\n\r\nexport default Toms;\r\n\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\nconst TasksList = ({ id,t_id,onTaskClick, fetchedUser,setActivePanel, UserData, setActiveModal, tasks, setTasks}) => {\r\n    const [onDel,setDel] = useState(false);\r\n    \r\n    useEffect( ()=>\r\n    {               \r\n        console.log(\"На задании\");\r\n        console.log(tasks);     \r\n        fetchData();\r\n    },[tasks]);\r\n\r\n    async function fetchData()  \r\n        {\r\n            let i = await fetch(`${url}/get_tom_tasks?id=`+t_id);\r\n            let Tasks = await i.json();\r\n            let items=[];\r\n            for(let item of Tasks)\r\n            {                \r\n                let r =await fetch(`${url}/get_task?id=`+item);\r\n                let resp = await r.json(); \r\n                items.push(resp);\r\n            }                        \r\n            if(s(items) !== s(tasks)) setTasks(items);\r\n        }\r\n\r\n    async function del(e)\r\n    {\r\n      e.preventDefault();      \r\n      let d = await fetch(`${url}/del_task?id=${e.currentTarget.dataset.ts_id}`)\r\n      fetchData();\r\n    }\r\n\r\n    const clean = () =>\r\n    {\r\n        setTasks(null);\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    const Isdone = (doneers) =>\r\n    {\r\n        if(fetchedUser != null)\r\n        {            \r\n            let user = doneers.find(item => item == fetchedUser.id)            \r\n            if(user == null) return true;\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Panel separator={false} id={id}>\r\n            <HeaderDrop Head=\"Задания\" setActiveModal={setActiveModal} UserData={UserData} setActivePanel={setActivePanel} setDel={setDel} onDel={onDel} modal=\"add-task\"/>            \r\n            <List>\r\n                {tasks !=null ?\r\n                    tasks.map(item =><Cell key={item.name}  data-ts_id={item._id} expandable onClick={onDel? del: onTaskClick} before={onDel ? <Icon28BombOutline/> :Isdone(item.doneers)? null :<Icon16Done/>}>{item.name}</Cell>) :\r\n                    <Div/>\r\n                }                \r\n            </List>\r\n        </Panel>\r\n        );\r\n};\r\n\r\nexport default TasksList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner, Header, List} from '@vkontakte/vkui';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\nconst UserList = ({ users }) => {\r\n    const [UsersData,setUserData] = useState(null);    \r\n    useEffect(()=>\r\n    {\r\n        // Получить инфу всех пользователей\r\n        async function fetchData()  \r\n        {\r\n            let ids = users[0];\r\n            for(let user of users)\r\n            {\r\n                ids+=\",\"+user;\r\n            }\r\n            let result = null;\r\n            if(users.length >0)\r\n            {\r\n                let t = await fetch(`${url}/get_users_vk_info?ids=${ids}`);\r\n                let r = await t.json();\r\n                result = r.response; \r\n            }\r\n            else result = [];           \r\n            // Присвоить в хук             \r\n            setUserData(result);\r\n        }\r\n        fetchData(); \r\n\r\n    },[]);\r\n    return(\r\n        <Group header={<Header mode=\"secondary\">Сделали</Header>}>\r\n        <List>\r\n            {UsersData != null ? \r\n                (UsersData.length > 0 ? \r\n            UsersData.map(user =><Cell key={user.id} before={<Avatar src={user.photo_50}/>}>{user.last_name} {user.first_name}</Cell>)\r\n            :\r\n            <Cell>Будь первым!</Cell>)\r\n            :\r\n            <Spinner size=\"large\" />\r\n            }          \r\n        </List>\r\n      </Group>);\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport {Spinner, Header,Div, List} from '@vkontakte/vkui';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\nconst CommentSection = ({ comments }) => {\r\n    const [UsersData,setUserData] = useState(null);    \r\n    useEffect(()=>\r\n    {\r\n        console.log(comments);\r\n        // Получить инфу всех пользователей\r\n        async function fetchData()  \r\n        {\r\n            let ids;\r\n            if(comments.length > 0)\r\n            ids = comments[0].id;\r\n            for(let comment of comments)\r\n            {\r\n                ids+=\",\"+comment.id;\r\n            }\r\n            let result = null;\r\n            if(comments.length >0)\r\n            {\r\n                let t = await fetch(`${url}/get_users_vk_info?ids=${ids}`);\r\n                let r = await t.json();\r\n                result = r.response; \r\n            }\r\n            else result = [];           \r\n            // Присвоить в хук             \r\n            setUserData(result);\r\n        }\r\n        fetchData(); \r\n\r\n    },[]);\r\n    return(\r\n        <Group header={<Header mode=\"secondary\">Коментарии</Header>}>\r\n        <List>\r\n            {UsersData != null ? \r\n                (UsersData.length > 0  ? \r\n            comments.map((comment) => { \r\n                let user = UsersData.find(u => u.id == comment.id);\r\n                if (user === undefined) return(null);\r\n                return(<Cell \r\n                    key={comment.text} \r\n                    before={<Avatar size={48} src={user.photo_50} />} \r\n                    size=\"l\"\r\n                description={<Cell multiline>{comment.text}</Cell>}>\r\n                {user.last_name} {user.first_name}\r\n                </Cell>)})\r\n            :\r\n            <Cell>Здусь пусто</Cell>)\r\n            :\r\n            <Spinner size=\"large\" />\r\n            }          \r\n        </List>\r\n      </Group>);\r\n};\r\n// comments.find(item => item.id == UsersData.id).text\r\n{/* <Cell key={user.id} before={<Avatar src={user.photo_50}/>}>{user.last_name} {user.first_name}</Cell> */}\r\n\r\nexport default CommentSection;\r\n","import React, {  useState, useEffect, Component, componentDidMount } from 'react';\r\n\r\nimport ModalPage from '@vkontakte/vkui/dist/components/ModalPage/ModalPage'\r\nimport ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot'\r\nimport ModalPageHeader from '@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow'\r\n\r\nimport UserList from '../components/usersList';\r\nimport CommentSection from '../components/commentSection';\r\n\r\nimport {Cell,Header,List,FormLayoutGroup,Textarea, Input } from '@vkontakte/vkui';\r\n\r\nimport {Spinner,Div,Alert,FixedLayout} from '@vkontakte/vkui';\r\n\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Send from '@vkontakte/icons/dist/24/send';\r\n\r\nimport url from \"../urls\";\r\n\r\n\r\n\r\n\r\nconst TaskInfo = ({activeModal,setActiveModal,ts_id,t_id,s_id,setts_id,fetchedUser,fetchSubj, fetchToms,fetchTasks, setPopout, UserData}) => {    \r\n    const closeModal = () =>{\r\n        setts_id(null);\r\n\t\tsetActiveModal(null);\r\n    } \r\n    \r\n    async function doneTask() \r\n    {\r\n        setts_id(null);\r\n        setActiveModal(null);        \r\n        let t = await fetch(`${url}/done_task?id=${ts_id}&user=${fetchedUser.id}`);\r\n        let task = await t.json(); \r\n        fetchTasks();\r\n    }\r\n\r\n    const closePopout = () =>\r\n    {\r\n        setPopout(null);\r\n    }   \r\n    \r\n    async function AddSubj() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n            if(document.getElementById(\"SubName\").value.length == 0) setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Пустое имя</p>\r\n          </Alert>)\r\n          else{\r\n        setActiveModal(null);        \r\n        let t = await fetch(`${url}/add_subject?name=${document.getElementById(\"SubName\").value}`);\r\n        fetchSubj();\r\n          }\r\n        }\r\n        else setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Нет прав</p>\r\n          </Alert>)\r\n        \r\n    }\r\n    async function AddTom() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n        if(document.getElementById(\"TomName\").value.length == 0) setPopout(<Alert            \r\n            onClose={closePopout}\r\n          >\r\n            <h2>Ошибка</h2>\r\n            <p>Пустое имя</p>\r\n          </Alert>)\r\n          else{\r\n        setActiveModal(null);  \r\n        let t = await fetch(`${url}/add_subject_tom?id=${s_id}&name=${document.getElementById(\"TomName\").value}`);  \r\n        fetchToms(); \r\n          } \r\n        }\r\n        else setPopout(<Alert onClose={closePopout}>\r\n            <h2>Ошибка</h2>\r\n            <p>Нет прав</p>\r\n          </Alert>)    \r\n    }\r\n    async function AddTask() \r\n    {\r\n        if(UserData.isHead)\r\n        {\r\n        let data = {\r\n            name: document.getElementById(\"TaskName\").value,\r\n            bounty: document.getElementById(\"Bounty\").value,\r\n            about: document.getElementById(\"Discript\").value,\r\n            deadline: document.getElementById(\"Deadline\").value,\r\n        }\r\n        if(data.name.length ==0 || data.bounty.length ==0 || data.about.length ==0) setPopout(<Alert            \r\n        onClose={closePopout}\r\n        >\r\n        <h2>Ошибка</h2>\r\n        <p>Есть незаполненое поле</p>\r\n      </Alert>)\r\n      else\r\n      {\r\n        if(data.deadline.length == 0) data.deadline=0;      \r\n        setActiveModal(null);          \r\n        console.log(data);\r\n        let t = await fetch(`${url}/add_tom_task?id=${t_id}&name=${data.name}&bounty=${data.bounty}&about=${data.about}&deadline=${data.deadline}`);  \r\n        fetchTasks(); \r\n        } \r\n    }\r\n    else setPopout(<Alert onClose={closePopout}>\r\n        <h2>Ошибка</h2>\r\n        <p>Нет прав</p>\r\n      </Alert>)    \r\n    }\r\n\r\n\r\n    const [task,setTask]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData()  \r\n        {\r\n            let t = await fetch(`${url}/get_task?id=`+ts_id);\r\n            let task = await t.json();          \r\n            setTask(task);\r\n        }\r\n        if(activeModal==\"task_info\") fetchData();\r\n    });\r\n\r\n    const Isdone = () =>\r\n    {\r\n        if(fetchedUser != null && task != null && task != \"-2\")\r\n        {            \r\n            let user = task.doneers.find(item => item == fetchedUser.id)            \r\n            if(user == null) return true;\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    async function AddComment ()    \r\n    {\r\n        console.log(document.getElementById(\"commentary\").value);\r\n        let text = document.getElementById(\"commentary\").value;\r\n        let r = await fetch(`${url}/comment_task?id=${ts_id}&user=${fetchedUser.id}&text=${text}`);\r\n        let res = await r.json(); \r\n         \r\n        document.getElementById(\"commentary\").value='';\r\n    }\r\n\r\n\tconst agree = (item) =>{\r\n\t\t\r\n\t}\r\n    return (\r\n        <ModalRoot activeModal={activeModal}>\r\n\t\t\t\t<ModalPage id =\"task_info\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader\r\n                right={Isdone() ? <PanelHeaderButton onClick={doneTask}>Сдать </PanelHeaderButton> : <p/>} >\r\n                        {task !=null && task != \"-2\" ? task.name : \"Loading...\"}\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {task !=null && task != \"-2\" ? \r\n                        <FormLayout>                             \r\n                                <Cell multiline>{task.discription}</Cell>\r\n                                <Cell description=\"За первое выполнение\">Награда: {task.bounty} rep</Cell>                               \r\n                                <UserList users={task.doneers}/>\r\n                                <CommentSection comments={task.comments}/>\r\n                                <Textarea id=\"commentary\" placeholder=\"Ваш комментарий\"/>\r\n                                <Button onClick={AddComment} size=\"l\">Добавить</Button>                               \r\n                        </FormLayout>\r\n                    :\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 30 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n\r\n                <ModalPage id =\"add-subject\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                       <Input id=\"SubName\"/>  \r\n                       <Button onClick={AddSubj} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-tom\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                    \r\n                    {true ? \r\n\r\n                    <FormLayout>\r\n                       <Input id=\"TomName\"/>  \r\n                       <Button onClick={AddTom} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>:\r\n                    <Div> \r\n                        <Spinner size=\"large\" style={{ marginBottom: 10 }} />\r\n                    </Div>}\r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"add-task\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                                        \r\n                    <FormLayout>\r\n                        <Input id=\"TaskName\" top={\"Название\"}/>\r\n                        <Input id=\"Bounty\" top={\"Награда\"}/>\r\n                        <Textarea id=\"Discript\" top={\"Описание\"}/>\r\n                        <Input id=\"Deadline\" type={\"date\"} top={\"Дед-лайн\"}/>\r\n                        <Button onClick={AddTask} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>                    \r\n\t\t\t\t</ModalPage>\r\n                <ModalPage id =\"q\"\r\n                onClose={closeModal}\r\n                dynamicContentHeight={true}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader>\r\n                        Добавить\r\n                    </ModalPageHeader>\r\n\t\t\t\t}>                                        \r\n                    <FormLayout>\r\n                        <Cell>Дарова</Cell>\r\n                        <UserList users={[]}/>\r\n                        <CommentSection comments={[]}/>\r\n                        <Input id=\"TaskName\" top={\"Название\"}/>\r\n                        <Input id=\"Bounty\" top={\"Награда\"}/>\r\n                        <Textarea id=\"Discript\" top={\"Описание\"}/>\r\n                        <Input id=\"Deadline\" type={\"date\"} top={\"Дед-лайн\"}/>\r\n                        <Button onClick={AddTask} size=\"xl\">Добавить</Button>\r\n                    </FormLayout>                   \r\n\t\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n    );\r\n\r\n}\r\n\r\nexport default TaskInfo;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport {View} from '@vkontakte/vkui';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nimport Subjects from '../panels/Subjects';\r\nimport Toms from '../panels/Tom';\r\nimport TasksList from '../panels/Tasks';\r\nimport TaskInfo from '../modals/TaskInfo';\r\nimport url from \"../urls\";\r\n\r\n\r\nconst Modal_page_task = \"task_info\";\r\n\r\nconst Tasks = ({ id, fetchedUser, UserData }) => {\r\n    const [activePanel,setActivePanel] = useState(\"subj\"); \r\n    const[activeModal,setActiveModal] = useState(null);\r\n    const[popout,setPopout] = useState(null);\r\n    \r\n    const [toms,setToms] = useState(null);\r\n    const [subjs,setSubjects] = useState(null);\r\n    const [tasks,setTasks] = useState(null);\r\n\r\n\r\n    const [s_id,sets_id] = useState(null);  \r\n    const [t_id,sett_id] = useState(null);  \r\n    const [ts_id,setts_id] = useState(null); \r\n    useEffect(()=>\r\n    {\r\n    },[]);       \r\n    \r\n    async function fetchSubj()  \r\n    {   let r =await fetch(`${url}/get_subjects`);\r\n        let resp = await r.json(); \r\n        if(s(resp.items) !== s(subjs)) setSubjects(resp.items);\r\n    }\r\n\r\n    async function fetchToms()  \r\n    {\r\n        let i = await fetch(`${url}/get_subject_toms?id=`+s_id);\r\n        let Toms = await i.json();\r\n        let items=[];\r\n        for(let item of Toms)\r\n        {              \r\n            let r =await fetch(`${url}/get_tom?id=`+item);\r\n            let resp = await r.json(); \r\n            items.push(resp);            \r\n        } \r\n        if(s(items) !== s(toms)) setToms(items);\r\n    }\r\n\r\n    async function fetchTasks()  \r\n        {\r\n            let i = await fetch(`${url}/get_tom_tasks?id=`+t_id);\r\n            let Tasks = await i.json();\r\n            let items=[];\r\n            for(let item of Tasks)\r\n            {                \r\n                let r =await fetch(`${url}/get_task?id=`+item);\r\n                let resp = await r.json(); \r\n                items.push(resp);\r\n            } \r\n            if(s(items) !== s(tasks)) setTasks(items);\r\n        }\r\n\r\n    const onSubjectClick = e =>{\r\n        e.preventDefault();\t\r\n        console.log('Вперёд к разделам!');\r\n        sets_id(e.currentTarget.dataset.s_id)\r\n        setToms(null);\r\n        setActivePanel(\"tome\");\r\n\t      }; \r\n\r\n    const onTomClick = e =>{\r\n          e.preventDefault();\t\r\n          console.log('Вперёд к заданиям!');\r\n          sett_id(e.currentTarget.dataset.t_id)\r\n          setTasks(null);\r\n          setActivePanel(\"task\");\r\n          };    \r\n\r\n    const onTaskClick = e =>\r\n    {\r\n      e.preventDefault();\t\r\n      console.log('Вперёд к информации о задании!');\r\n      setActiveModal(Modal_page_task);\r\n      setts_id(e.currentTarget.dataset.ts_id)\r\n    }\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    }\r\n\r\n    return(\r\n        <View header={false} popout={popout} id={id} activePanel={activePanel} modal={\r\n        <TaskInfo fetchedUser={fetchedUser} \r\n                  s_id={s_id} \r\n                  t_id={t_id} \r\n                  activeModal={activeModal} \r\n                  setts_id={setts_id} \r\n                  ts_id={ts_id}\r\n                  fetchToms={fetchToms} \r\n                  fetchSubj={fetchSubj}\r\n                  fetchTasks={fetchTasks}\r\n                  UserData={UserData}\r\n                  setPopout={setPopout}\r\n                  setActiveModal={setActiveModal}/>}>          \r\n          <Subjects onSubjectClick ={onSubjectClick} id=\"subj\" UserData={UserData} subjs={subjs} setSubjects={setSubjects} setActivePanel={setActivePanel} setActiveModal={setActiveModal}/>        \r\n          <Toms id=\"tome\" onTomClick={onTomClick} s_id={s_id} UserData={UserData} toms={toms} setToms={setToms} setActivePanel={setActivePanel} setActiveModal={setActiveModal}/>\r\n          <TasksList fetchedUser={fetchedUser} id=\"task\" UserData={UserData} onTaskClick={onTaskClick} t_id={t_id} tasks={tasks} setTasks={setTasks} setActivePanel={setActivePanel} setActiveModal={setActiveModal}/>                    \r\n        </View>);\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect  } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {PanelHeaderSimple,PanelHeader} from '@vkontakte/vkui';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport {List,PanelHeaderContext,PanelHeaderContent,Avatar} from '@vkontakte/vkui'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport HeaderDrop from '../components/HeaderDrop'\r\nimport url from \"../urls\";\r\n\r\n\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline'; // для удаления\r\nconst Members = ({id}) => {\r\n    const [users,setUsers] = useState(null);\r\n    useEffect( ()=>\r\n    {     \r\n        fetchData();\r\n    },[users]);\r\n\r\n    const s =(obj) =>\r\n    {\r\n        return(JSON.stringify(obj))\r\n    } \r\n\r\n    async function fetchData()  \r\n        {\r\n            let mem =await fetch(`${url}/get_members`);\r\n            let members = await mem.json();   \r\n            let ids;\r\n            if(members.length>0)\r\n            {\r\n                ids=String(members[0].vk_id);\r\n                for(let member of members)\r\n                {       \r\n                    ids+=\",\"+String(member.vk_id);\r\n                } \r\n                let vk_in = await fetch(`${url}/get_users_vk_info?ids=${ids}`)\r\n                let vk_info = await vk_in.json();\r\n                vk_info = vk_info.response;\r\n                let data=[];               \r\n                for(let user of vk_info)\r\n                {\r\n                    data.push({\r\n                        firstName: user.first_name,\r\n                        lastName: user.last_name,\r\n                        photo: user.photo_50,\r\n                        rep: members.find(membe => membe.vk_id == user.id).rep\r\n                    })\r\n                }            \r\n                data.sort((a,b)=>{\r\n                    if(a.rep>b.rep) return -1;\r\n                    else\r\n                    if(b.rep<a.rep) return 1;\r\n                    else return 0;\r\n                });    \r\n                if(s(users) !== s(data)) setUsers(data);\r\n            } \r\n\r\n        }\r\n\r\n       \r\n\r\n    return(\r\n        <Panel id={id}>\r\n            <PanelHeader>\r\n                Пользователи\r\n            </PanelHeader>\r\n            <List>\r\n            {users ? users.map(user => \r\n                <Cell key={user.lastName+user.firstName}\r\n                  before={<Avatar src={user.photo} />}\r\n                  size=\"l\"\r\n                  description={\"Репутация: \"+user.rep}                  \r\n                >\r\n                  {user.lastName} {user.firstName}</Cell>):null}\r\n            </List>\r\n        </Panel>);\r\n};\r\n\r\nexport default Members;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {Epic,Tabbar,TabbarItem} from '@vkontakte/vkui'\nimport {Panel,\n\t\tPanelHeader} from '@vkontakte/vkui';\n\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline'; // Задания\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'; // Профиль\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline'; // Пользователи\n\nimport Profile from './panels/Profile';\n\nimport Tasks from './views/Tasks';\nimport Members from './panels/Members';\n\nimport url from \"./urls\";\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activeStory,setActiveStory] = useState('me');\n\tconst [activePanel, setActivePanel] = useState();\n\tconst [fetchedUser, setUser] = useState(null);\n    const [UserData,setUserData] = useState(null);    \n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n \n\tuseEffect(() => {\n\t\tbridge.send(\"VKWebAppInit\", {});\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst find = await fetch(`${url}/get_member?id=`+user.id);\n\t\t\tconst finded = await find.json();\n\t\t\tif(finded == \"-1\")\n\t\t\t{    \n\t\t\t\tconst add = await fetch(`${url}/add_member?vk_id=`+user.id);\n\t\t\t\tconst find = await fetch(`${url}/get_member?id=`+user.id);\n\t\t\t\tconst finded = await find.json();\n\t\t\t\tif(finded != \"-1\") setUserData(finded);\t\t\t\t\n\t\t\t}\n\t\t\telse setUserData(finded);\t\n\t\t\tsetUser(user);\n\t\t}\t\t\t\n\t\t\tfetchData();\n\t\t\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst onStoryChange = e =>{\t\n\t\tsetActiveStory(e.currentTarget.dataset.story);\n\t};\n\n\treturn (\n\t\t<Epic activeStory={activeStory} tabbar={\n\t\t  <Tabbar>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'me'}\n\t\t\t  data-story=\"me\"\n\t\t\t  text=\"Профиль\"\n\t\t\t><Icon28UserOutline /></TabbarItem>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'task'}\n\t\t\t  data-story=\"task\"\n\t\t\t//   label=\"12\"\n\t\t\t  text=\"Задания\"\n\t\t\t><Icon28BrainOutline /></TabbarItem>\n\t\t\t<TabbarItem\n\t\t\t  onClick={onStoryChange}\n\t\t\t  selected={activeStory === 'members'}\n\t\t\t  data-story=\"members\"\n\t\t\t  text=\"Пользователи\"\n\t\t\t><Icon28Users3Outline /></TabbarItem>\t\t\t\n\t\t  </Tabbar>\n\t\t}>\n\t\t  <View id=\"me\" activePanel=\"me\">\n\t\t\t<Profile id=\"me\" fetchedUser={fetchedUser} setUserData={setUserData} UserData={UserData}/>\t\t\t  \t\t\t\n\t\t  </View>\n\t\t  <Tasks fetchedUser={fetchedUser} UserData={UserData} id=\"task\"/>\t\t \n\t\t<View id=\"members\" activePanel=\"members\">\n\t\t\t<Members id=\"members\"/>\t\t\t\n\t\t</View>\t\t  \n\t\t</Epic>\n\t  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}